#@ load("@ytt:data", "data")
#@ def in_list(key, list):
#@  return hasattr(data.values.tap_values, key) and (data.values.tap_values[key] in list)
#@ end
#! This if condition ensures that this scan policy is only created if the supply chain is testing_scanning and the TAP profile used is full or build.
#@ if/end in_list('supply_chain', ['testing_scanning']) and in_list('profile', ['full', 'build']):
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: maven
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Build Tools
    tekton.dev/tags: build-tool
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le"
spec:
  description: >-
    This Task can be used to run a Maven build.
  workspaces:
    - name: source
      description: The workspace consisting of maven project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom maven settings
        provided by the user.
  params:
    - name: TRUSTSTORE_PASSWORD_SECRET
      type: string
      description: the name of the secret that contains truststore password
      default: java-truststore-password
    - name: TRUSTSTORE_PASSWORD_SECRET_KEY
      type: string
      description: the name of the key in the secret that contains truststore password
      default: password
    - name: MAVEN_CA_SECRET
      type: string
      description: the name of the secret that contains the ca for maven
      default: custom-ca
    - name: MAVEN_CA_SECRET_KEY
      type: string
      description: the name of the key in the secret that contains the ca for maven
      default: ca.crt
    - name: GOALS
      description: maven goals to run
      type: array
      default:
        - "test"
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: ""
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
  steps:
    - name: mvn-keystore
      image: #@ data.values.testing_image
      volumeMounts:
        - name: "maven-ca"
          mountPath: /var/maven_ca
          readOnly: true
      env:
       - name: TRUSTSTORE_PASSWORD
         valueFrom:
           secretKeyRef:
              name: $(params.TRUSTSTORE_PASSWORD_SECRET)
              key: $(params.TRUSTSTORE_PASSWORD_SECRET_KEY)
      script: |
           #!/usr/bin/env bash
           [[ -f $(workspaces.source.path)/truststore.jks ]] && \
           echo 'using existing $(workspaces.source.path)/truststore.jks' && exit 0

           cd $(workspaces.source.path)
           keytool -import -file /var/maven_ca/$(params.MAVEN_CA_SECRET_KEY) -no-prompt -keystore truststore.jks -storepass $TRUSTSTORE_PASSWORD
    - name: mvn-settings
      image: #@ data.values.ubi_minimal_image
      script: |
        #!/usr/bin/env bash
        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \
        echo 'using existing $(workspaces.maven-settings.path)/settings.xml' && exit 0

        cat > $(workspaces.maven-settings.path)/settings.xml <<EOF
        <settings>
          <servers>
            <!-- The servers added here are generated from environment variables. Don't change. -->
            <!-- ### SERVER's USER INFO from ENV ### -->
          </servers>
          <mirrors>
            <!-- The mirrors added here are generated from environment variables. Don't change. -->
            <!-- ### mirrors from ENV ### -->
          </mirrors>
          <proxies>
            <!-- The proxies added here are generated from environment variables. Don't change. -->
            <!-- ### HTTP proxy from ENV ### -->
          </proxies>
        </settings>
        EOF

        xml=""
        if [ -n "$(params.PROXY_HOST)" -a -n "$(params.PROXY_PORT)" ]; then
          xml="<proxy>\
            <id>genproxy</id>\
            <active>true</active>\
            <protocol>$(params.PROXY_PROTOCOL)</protocol>\
            <host>$(params.PROXY_HOST)</host>\
            <port>$(params.PROXY_PORT)</port>"
          if [ -n "$(params.PROXY_USER)" -a -n "$(params.PROXY_PASSWORD)" ]; then
            xml="$xml\
                <username>$(params.PROXY_USER)</username>\
                <password>$(params.PROXY_PASSWORD)</password>"
          fi
          if [ -n "$(params.PROXY_NON_PROXY_HOSTS)" ]; then
            xml="$xml\
                <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>"
          fi
          xml="$xml\
              </proxy>"
          sed -i "s|<!-- ### HTTP proxy from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

        if [ -n "$(params.SERVER_USER)" -a -n "$(params.SERVER_PASSWORD)" ]; then
          xml="<server>\
            <id>serverid</id>"
          xml="$xml\
                <username>$(params.SERVER_USER)</username>\
                <password>$(params.SERVER_PASSWORD)</password>"
          xml="$xml\
              </server>"
          sed -i "s|<!-- ### SERVER's USER INFO from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

        if [ -n "$(params.MAVEN_MIRROR_URL)" ]; then
          xml="    <mirror>\
            <id>mirror.default</id>\
            <url>$(params.MAVEN_MIRROR_URL)</url>\
            <mirrorOf>central</mirrorOf>\
          </mirror>"
          sed -i "s|<!-- ### mirrors from ENV ### -->|$xml|" $(workspaces.maven-settings.path)/settings.xml
        fi

    - name: mvn-goals
      image: #@ data.values.maven_image
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      command: ["/usr/bin/mvn"]
      env:
      - name: TRUSTSTORE_PASSWORD
        valueFrom:
           secretKeyRef:
              name: $(params.TRUSTSTORE_PASSWORD_SECRET)
              key: $(params.TRUSTSTORE_PASSWORD_SECRET_KEY)
      args:
        - -s
        - $(workspaces.maven-settings.path)/settings.xml
        - -Djavax.net.ssl.trustStore=$(workspaces.source.path)/truststore.jks
        - -Djavax.net.ssl.trustStorePassword=$(TRUSTSTORE_PASSWORD)
        - "$(params.GOALS)"
  volumes:
    - name: "maven-ca"
      secret:
        secretName: "$(params.MAVEN_CA_SECRET)"
        optional: true